name: CI
on:
  push:
    branches: ['**']
    tags-ignore: ['**']
  pull_request:
  schedule:
  - cron: '0 2 * * *'
jobs:
  activate:
    if: "!endsWith(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
    - name: Proceed
      run: echo ok go
  build:
    needs: activate
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        ruby: ['2.4', '2.5', '2.6', '2.7', '3.0']
        asciidoctor-diagram: [~]
        exclude:
        - os: ubuntu-latest
          ruby: '3.0'
        include:
# See https://github.com/oracle/truffleruby/issues/2179, fix in 21.1.0
#        - os: ubuntu-latest
#          ruby: truffleruby-21.1.0
        - os: ubuntu-latest
          ruby: jruby-9.2.14.0
        - os: macos-latest
          ruby: '3.0'
        - os: ubuntu-latest
          ruby: '3.0'
          primary: deep
    runs-on: ${{ matrix.os }}
    env:
      COVERAGE: ${{ matrix.primary }}
      JRUBY_OPTS: '-J-XX:+TieredCompilation -J-XX:TieredStopAtLevel=1 -J-Xss2m -Xcompile.invokedynamic=false'
      SOURCE_DATE_EPOCH: '1521504000'
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
    - name: Configure Bundler
      run: |
        bundle config --local path .bundle/gems
        bundle config --local without docs
#    - name: Configure Nokogiri installation (Linux)
#      if: matrix.os == 'ubuntu-latest'
#      run: |
#        bundle config --local build__nokogiri --use-system-libraries
#        sudo apt-get install libxslt1-dev
#    - name: Configure Nokogiri installation (macOS)
#      if: matrix.os == 'macos-latest'
#      run: bundle config --local build__nokogiri --use-system-libraries
#    - name: Set AsciiMath version
#      if: matrix.asciimath-version
#      run: echo 'ASCIIMATH_VERSION=${{ matrix.asciimath-version }}' >> $GITHUB_ENV
#    - name: Set Rouge version
#      if: matrix.rouge-version
#      run: echo 'ROUGE_VERSION=${{ matrix.rouge-version }}' >> $GITHUB_ENV
    - name: Set JRUBY_OPTS
      if: matrix.jruby-opts
      run: echo 'JRUBY_OPTS=${{ matrix.jruby-opts }}' >> $GITHUB_ENV
    - name: Install dependencies
      run: bundle --jobs 3 --retry 3
    - name: Run tests
      run: bundle exec ruby -w $(bundle exec ruby -e 'print File.join Gem.bindir, %q(rake)') spec
